AWSTemplateFormatVersion: '2010-09-09'
Description: Resources for Book My Cab photo processing workflow.
Transform: 'AWS::Serverless-2016-10-31'

Resources:
  BookMyCabS3Bucket:
    Type: AWS::S3::Bucket


  ThumbnailS3Bucket:
    Type: AWS::S3::Bucket


  FaceDetectionFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: "Lambda function to detect faces using Amazon Rekognition"
      Handler: face_detection.lambda_handler
      Runtime: python3.7
      MemorySize: 256
      Timeout: 10
      Policies:
        Statement:
          - Sid: "ReadFromS3Bucket"
            Effect: "Allow"
            Action:
              - s3:GetObject
            Resource: !Sub "arn:aws:s3:::${BookMyCabS3Bucket}/*"
          - Sid: "RekognitionFace"
            Effect: Allow
            Action:
              - rekognition:DetectFaces
            Resource: "*"
      CodeUri:
        ./lambda-functions/face_detection.py
      Environment:
        Variables:
          IMAGE_BUCKET_NAME: !Ref BookMyCabS3Bucket


  FailureNotificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: "Lambda function to send failure notifications to the user"
      Handler: failure_notification.lambda_handler
      Runtime: python3.7
      MemorySize: 256
      Timeout: 10
      CodeUri:
        ./lambda-functions/failure_notification.py


  FaceSearchFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: "Lambda function to search for a face in the collection"
      Handler: face_search.lambda_handler
      Runtime: python3.7
      MemorySize: 256
      Timeout: 10
      Policies:
        Statement:
          - Sid: "ReadFromS3Bucket"
            Effect: "Allow"
            Action:
              - s3:GetObject
            Resource: !Sub "arn:aws:s3:::${BookMyCabS3Bucket}/*"
          - Sid: "SearchFace"
            Effect: Allow
            Action:
              - rekognition:SearchFacesByImage
            Resource: "*"
      CodeUri:
        ./lambda-functions/face_search.py
      Environment:
        Variables:
          IMAGE_BUCKET_NAME: !Ref BookMyCabS3Bucket


  IndexFaceFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: "Lambda function to index faces using Amazon Rekognition"
      Handler: index_face.lambda_handler
      Runtime: python3.7
      MemorySize: 256
      Timeout: 10
      Policies:
        Statement:
          - Sid: "ReadFromS3Bucket"
            Effect: "Allow"
            Action:
              - s3:GetObject
            Resource: !Sub "arn:aws:s3:::${BookMyCabS3Bucket}/*"
          - Sid: "SearchFace"
            Effect: Allow
            Action:
              - rekognition:IndexFaces
            Resource: "*"
      CodeUri:
        ./lambda-functions/index_face.py
      Environment:
        Variables:
          IMAGE_BUCKET_NAME: !Ref BookMyCabS3Bucket


  ThumbnailFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: create_thumbnail.lambda_handler
      Runtime: python2.7
      MemorySize: 1536
      Timeout: 60
      Policies:
        Statement:
          - Sid: "WritetoS3ThumbnailBucket"
            Effect: Allow
            Action:
              - s3:PutObject
            Resource: !Sub "arn:aws:s3:::${ThumbnailS3Bucket}/*"
          - Sid: "ReadFromS3"
            Effect: Allow
            Action:
              - s3:GetObject
            Resource: !Sub "arn:aws:s3:::${BookMyCabS3Bucket}/*"
      CodeUri:
        ./lambda-functions/create_thumbnail
      Environment:
        Variables:
          IMAGE_BUCKET_NAME: !Ref BookMyCabS3Bucket
          THUMBNAIL_BUCKET_NAME: !Ref ThumbnailS3Bucket


  StateMachineRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                !Sub states.${AWS::Region}.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "InvokeLambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: "InvokeLambda"
                Effect: "Allow"
                Action:
                  - "lambda:InvokeFunction"
                Resource: "*"


Outputs:
  FaceDetectionFunctionArn:
    Value: !GetAtt FaceDetectionFunction.Arn
  NotificationPlaceholderFunctionArn:
    Value: !GetAtt FailureNotificationFunction.Arn
  FaceSearchFunctionArn:
    Value: !GetAtt FaceSearchFunction.Arn
  IndexFaceFunctionArn:
    Value: !GetAtt IndexFaceFunction.Arn
  ThumbnailFunctionArn:
    Value: !GetAtt ThumbnailFunction.Arn
  BookCabS3Bucket:
    Value: !Ref BookMyCabS3Bucket
  ThumbnailS3Bucket:
    Value: !Ref ThumbnailS3Bucket
  StateMachineRole:
    Value: !GetAtt StateMachineRole.Arn